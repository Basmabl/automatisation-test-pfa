name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  devsecops-pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python --version
        pip freeze

    - name: Run unit tests
      run: pytest test-model.py

    - name: Build Docker image
      run: docker build -t basmaboulli/unitest-basma:latest .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: docker push basmaboulli/unitest-basma:latest

    - name: Scan image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: basmaboulli/unitest-basma:latest
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true

        jobs:
  sonarcloud:
    name: Run SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=Basmabl_automatisation-test-pfa
            -Dsonar.organization=basmabl
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

    
        
