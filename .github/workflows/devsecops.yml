name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  devsecops-pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Build Docker image
      run: docker build -t basmaboulli/unitest-basma:latest .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: docker push basmaboulli/unitest-basma:latest

    - name: Scan image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: basmaboulli/unitest-basma:latest
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true

    - name: Run tests and generate coverage
      run: |
        pytest --cov=app --cov-report=xml:sonar-coverage.xml test-model.py

    - name: Validate coverage file  # Debugging helper
      run: |
        cat sonar-coverage.xml | head -n 10
        echo "File exists: $(ls -la sonar-coverage.xml)"

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        args: >
          -Dsonar.projectKey=Basmabl_automatisation-test-pfa
          -Dsonar.organization=basmabl
          -Dsonar.python.version=3.13
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.python.coverage.reportPaths=sonar-coverage.xml
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}